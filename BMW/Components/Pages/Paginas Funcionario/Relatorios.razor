@page "/funcionario/relatorios"
@using BMW.Data.Data
@using BMW.Data
@using BMW.Data.Models
@inject NavigationManager NavigationManager
@inject UserState UserState

<PageTitle>Relatórios</PageTitle>

<TableLayout 
    UserName="@UserState.UserName"
    UserRole="Funcionário"
    Button1Text="Gestão de Encomendas"
    Button1Href="/funcionario/gestor-encomendas"
    Button1Icon="📦"
    Button2Text="Relatórios"
    Button2Href="/funcionario/relatorios"
    Button2Icon="📄"
    Title="Gestão de Relatórios">

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Data de Geração</th>
                <th>Tipo</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (ListaRelatorios.Any())
            {
                @foreach (var relatorio in ListaRelatorios)
                {
                    <tr>
                        <td>@relatorio.Id</td>
                        <td>@relatorio.DataGeracao.ToString("dd-MM-yyyy")</td>
                        <td>@(relatorio.Tipo == 1 ? "Encomendas" : "Outro")</td>
                        <td>
                            <button class="btn" @onclick="() => VisualizarRelatorio(relatorio.Id)">Visualizar</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">Nenhum relatório encontrado.</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="actions">
        <button class="btn btn-primary" @onclick="CriarRelatorio">Criar Relatório</button>
    </div>
</TableLayout>

@code {
    private List<Relatorio> ListaRelatorios = new();

    protected override void OnInitialized()
    {
        try
        {
            ListaRelatorios = BMWFacade.GetInstance().GetRelatorios().ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar relatórios: {ex.Message}");
        }
    }

    private void CriarRelatorio()
    {
        NavigationManager.NavigateTo("/relatorios/criar");
    }

    private void VisualizarRelatorio(int idRelatorio)
    {
        Console.WriteLine($"Visualizando o relatório com ID: {idRelatorio}");
        NavigationManager.NavigateTo($"/relatorios/visualizar/{idRelatorio}");
    }
}

<style>
    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .table th, .table td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .table th {
        background-color: #f0f0f0;
        font-weight: bold;
    }

    .table tr:hover {
        background-color: #f9f9f9;
    }

    .btn {
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn:hover {
        background-color: #0056b3;
    }

    .btn-primary {
        background-color: #28a745;
    }

    .btn-primary:hover {
        background-color: #218838;
    }

    .actions {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }
</style>
