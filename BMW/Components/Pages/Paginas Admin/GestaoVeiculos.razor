@page "/admin/gestor-veiculos"
@using BMW.Data.Data
@using BMW.Data.Models
@using BMW.Data
@inject NavigationManager NavigationManager
@inject UserState UserState

<PageTitle>Gest√£o de Ve√≠culos</PageTitle>

<TableLayout 
    UserName="@UserState.UserName"
    UserRole="Administrador"
    Button1Text="Gest√£o de Funcion√°rios"
    Button1Href="/admin/gestor-funcionarios"
    Button1Icon="üë•"
    Button2Text="Gest√£o de Ve√≠culos"
    Button2Href="/admin/gestor-veiculos"
    Button2Icon="üöó"
    Title="Gest√£o de Ve√≠culos">

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Modelo</th>
                <th>Pre√ßo Base</th>
                <th>Data de Adi√ß√£o</th>
                <th>A√ß√µes</th>
            </tr>
        </thead>
        <tbody>
            @if (veiculos == null || !veiculos.Any())
            {
                <tr>
                    <td colspan="5">Nenhum ve√≠culo encontrado.</td>
                </tr>
            }
            else
            {
                @foreach (var veiculo in veiculos)
                {
                    <tr>
                        <td>@veiculo.Id</td>
                        <td>@veiculo.Modelo</td>
                        <td>@string.Format("{0:C}", veiculo.PrecoBase)</td>
                        <td>@veiculo.DataAdicao.ToShortDateString()</td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => RemoverVeiculo(veiculo.Id)">Remover</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="actions">
        <button class="btn btn-primary" @onclick="NavigateToAdicionarVeiculo">Adicionar Ve√≠culo</button>
    </div>
</TableLayout>

@code {
    private List<Veiculo> veiculos = new List<Veiculo>();

    protected override void OnInitialized()
    {
        try
        {
            // Obter a lista de ve√≠culos do BMWFacade
            veiculos = BMWFacade.GetInstance().GetCatalogo().ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar ve√≠culos: {ex.Message}");
        }
    }

    private void RemoverVeiculo(int id)
    {
        try
        {
            BMWFacade.GetInstance().DeleteVeiculo(id);
            Console.WriteLine($"Ve√≠culo com ID {id} removido com sucesso.");
            
            // Atualizar a lista de ve√≠culos ap√≥s a remo√ß√£o
            veiculos = BMWFacade.GetInstance().GetCatalogo().ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao remover ve√≠culo: {ex.Message}");
        }
    }

    private void NavigateToAdicionarVeiculo()
    {
        NavigationManager.NavigateTo("/admin/gestor-veiculos/adicionar-veiculo");
    }
}

<style>
    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .table th, .table td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .table th {
        background-color: #f0f0f0;
        font-weight: bold;
    }

    .table tr:hover {
        background-color: #f9f9f9;
    }

    .btn {
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn:hover {
        background-color: #0056b3;
    }

    .btn-danger {
        background-color: #dc3545;
    }

    .btn-danger:hover {
        background-color: #bd2130;
    }

    .actions {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }
</style>
